# Interactive debugging with https://github.com/marketplace/actions/debugging-with-tmate helps.

on: [push, pull_request]

name: reprex

jobs:
  reprex:

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'oldrel-1'}
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NOT_CRAN: true

    steps:
      - uses: actions/checkout@v3

      - name: system dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libmbedtls-dev

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install packages
        shell: Rscript {0}
        run: |
          install.packages(
            c("nanonext", "mirai", "processx"),
            repos = c("https://shikokuchuo.r-universe.dev", "https://cloud.r-project.org")
          )

      - name: Run reprex
        shell: Rscript {0}
        run: |
          library(mirai)
          daemons(
            n = 1L,
            url = "ws://127.0.0.1:0",
            dispatcher = TRUE,
            seed = NULL,
            token = TRUE,
            retry = TRUE
          )
          task <- mirai(TRUE)
          url <- rownames(status()$daemons)
          process <- processx::run(
            command = "R",
            args = c("-e", sprintf("'mirai::daemon(url = \"%s\")'", url)),
            cleanup = TRUE
          )
          print(task$data)
          Sys.sleep(2)
          print(task$data)
          print(status())
